name: CI/CD

on:
  push:
    branches: main
    
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Log in to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push frontend Docker image
        id: build-frontend-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: "covid-dash"
          IMAGE_TAG: v1-frontend
        run: |
          docker build -t covid-dash:$IMAGE_TAG ./react-flask-app
          docker tag covid-dash:$IMAGE_TAG 414675159571.dkr.ecr.us-east-2.amazonaws.com/covid-dash:$IMAGE_TAG
          docker push 414675159571.dkr.ecr.us-east-2.amazonaws.com/covid-dash:$IMAGE_TAG
      

      - name: Build and push frontend Docker image
        id: build-backend-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: "covid-dash"
          IMAGE_TAG: v1-backend
        run: |
          docker build -t covid-dash:$IMAGE_TAG ./FlaskApp
          docker tag covid-dash:$IMAGE_TAG 414675159571.dkr.ecr.us-east-2.amazonaws.com/covid-dash:$IMAGE_TAG
          docker push 414675159571.dkr.ecr.us-east-2.amazonaws.com/covid-dash:$IMAGE_TAG

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ secrets.ECS_CONTAINER_DEFINITION }} \
            --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ secrets.ECS_CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ secrets.ECS_SERVICE }}
          cluster: ${{ secrets.ECS_CLUSTER }}
          wait-for-service-stability: true
      
      
